[project]
name = "quest-qmc"

version = "0.0.1"

description = "Quest QMC"

readme = "README.md"
keywords = [ "qmc", "quest" ]
license = { file = "LICENSE" }

maintainers = [ { name = "Vladimir Iglovikov" } ]

authors = [ { name = "Vladimir Iglovikov" } ]
requires-python = ">=3.12"

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
urls.Homepage = "https://albumentations.ai/docs/benchmarking_results/"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
target-version = "py312"

line-length = 120
indent-width = 4

# Assume Python 3.12
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".venv_*",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site",
  "site-packages",
  "tests",
  "tools",
  "venv",
]

format.indent-style = "space"
# Like Black, respect magic trailing commas.
format.quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
format.line-ending = "auto"
format.skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
lint.select = [ "ALL" ]
lint.ignore = [
  "ANN101",
  "ANN102",
  "ANN201",
  "ANN204",
  "ANN401",
  "ARG001",
  "ARG002",
  "ARG004",
  "B008",
  "B027",
  "BLE001",
  "C901",
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D205",
  "D415",
  "EM101",
  "EM102",
  "F403",
  "FBT001",
  "FBT002",
  "FBT003",
  "G004",
  "N802",
  "N803",
  "N806",
  "N812",
  "PD901",
  "PLR0912",
  "PLR0913",
  "PLR2004",
  "PTH123",
  "S311",
  "T201",
  "TCH001",
  "TCH002",
  "TCH003",
  "TRY003",
]

# Allow fix for all enabled rules (when `--fix`) is provided.

lint.explicit-preview-rules = true
lint.fixable = [ "ALL" ]
lint.unfixable = [  ]
# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Like Black, use double quotes for strings.
lint.pydocstyle.convention = "google"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
